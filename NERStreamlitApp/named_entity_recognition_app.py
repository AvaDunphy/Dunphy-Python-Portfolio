# -*- coding: utf-8 -*-
"""Named Entity Recognition App

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gbPPb7yYBzFzGZfz3NN8EkE3kni6AgJn
"""

# Named Entity Recognition (NER) App Project
## The NER project allows me to employ Python, spaCy, and Streamlit to disect data, breaking it down into different rules and organizational methods. This way users are able to better understand their own data sets.

!pip install spacy
!pip install streamlit

import streamlit as st
import spacy
from spacy.pipeline import EntityRuler
from spacy import displacy

nlp = spacy.blank('en')

"""First, I need to load a base model under spaCy"""

st.sidebar.title('Enter Customer Entity Pattern')
with st.sidebar.form(key='pattern_form'):
    label = st.text_input('Entity Label')
    pattern = st.text_input('Entity Pattern')
    submit_button = st.form_submit_button(label='Add Entity')

if 'patterns' not in st.session_state: ## I TRIED THIS BUT CONFUSED
    st.session_state['patterns'] = []

if submit_button: ## THIS I SAW ONLINE AS ADITIONAL
    st.session_state['patterns'].append({'label': label, 'pattern': pattern})

if "entity_ruler" in nlp.pipe_names:
    nlp.remove_pipe("entity_ruler")
ruler = nlp.add_pipe("entity_ruler")
ruler.add_patterns(st.session_state.patterns)

# User input
st.title("Custom Named Entity Recognition App")
text_input = st.text_area("Paste or type text here:", height=200)
uploaded_file = st.file_uploader("...or upload a .txt file", type=["txt"])

if uploaded_file:
    text_input = uploaded_file.read().decode("utf-8")

if text_input:
    doc = nlp(text_input)
    html = displacy.render(doc, style="ent", jupyter=False)
    st.markdown(html, unsafe_allow_html=True)

